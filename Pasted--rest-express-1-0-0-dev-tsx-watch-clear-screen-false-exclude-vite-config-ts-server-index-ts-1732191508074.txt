> rest-express@1.0.0 dev
> tsx watch --clear-screen=false --exclude vite.config.ts.* server/index.ts

12:17:53 PM [express] serving on port 5000
12:17:58 PM [express] GET /api/user 401 in 5ms
Auth check - isAuthenticated: false
Attempting to find test account
Successfully logged in test account: 1
Fetching supplements for user: 1
Found 0 supplements for user 1
No supplements found for user: 1
12:17:58 PM [express] GET /api/supplements 200 in 91ms :: []
12:17:58 PM [express] GET /api/user 401 in 1ms
Auth check - isAuthenticated: false
Attempting to find test account
Successfully logged in test account: 1
Fetching supplements for user: 1
Found 0 supplements for user 1
No supplements found for user: 1
12:17:58 PM [express] GET /api/supplements 304 in 84ms :: []

 ERROR(TypeScript)  Cannot find module 'react-router-dom' or its corresponding type declarations.
 FILE  /home/runner/WomensWellnessApp/client/src/components/Navbar.tsx:1:25

  > 1 | import { NavLink } from "react-router-dom";
      |                         ^^^^^^^^^^^^^^^^^^
    2 |
    3 | function Navbar() {
    4 |   return (

 ERROR(TypeScript)  'zodResolver' is declared but its value is never read.
 FILE  /home/runner/WomensWellnessApp/client/src/components/SupplementTracker.tsx:4:1

    2 | import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
    3 | import { useForm } from "react-hook-form";
  > 4 | import { zodResolver } from "@hookform/resolvers/zod";
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    5 | import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
    6 | import { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from "@/components/ui/form";
    7 | import { Input } from "@/components/ui/input";

 ERROR(TypeScript)  'insertSupplementSchema' is declared but its value is never read.
 FILE  /home/runner/WomensWellnessApp/client/src/components/SupplementTracker.tsx:12:10

    10 | import { Loader2 } from "lucide-react";
    11 | import { useToast } from "@/hooks/use-toast";
  > 12 | import { insertSupplementSchema, type InsertSupplement, type Supplement } from "@db/schema";
       |          ^^^^^^^^^^^^^^^^^^^^^^
    13 | import type { ReactElement } from "react";
    14 |
    15 | // Simplified form data interface

 ERROR(TypeScript)  'InsertSupplement' is declared but its value is never read.
 FILE  /home/runner/WomensWellnessApp/client/src/components/SupplementTracker.tsx:12:39

    10 | import { Loader2 } from "lucide-react";
    11 | import { useToast } from "@/hooks/use-toast";
  > 12 | import { insertSupplementSchema, type InsertSupplement, type Supplement } from "@db/schema";
       |                                       ^^^^^^^^^^^^^^^^
    13 | import type { ReactElement } from "react";
    14 |
    15 | // Simplified form data interface

 ERROR(TypeScript)  'FieldValues' is declared but its value is never read.
 FILE  /home/runner/WomensWellnessApp/client/src/components/SymptomTracker.tsx:2:42

    1 | import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
  > 2 | import { useForm, ControllerRenderProps, FieldValues } from "react-hook-form";
      |                                          ^^^^^^^^^^^
    3 | import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
    4 | import { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from "@/components/ui/form";
    5 | import { Input } from "@/components/ui/input";

 ERROR(TypeScript)  Type 'string' does not satisfy the constraint '"date" | "description" | "category" | "severity" | "mood" | "moodIntensity"'.
 FILE  /home/runner/WomensWellnessApp/client/src/components/SymptomTracker.tsx:213:85

    211 |                 control={form.control}
    212 |                 name="category"
  > 213 |                 render={({ field }: { field: ControllerRenderProps<SymptomFormData, string> }) => (
        |                                                                                     ^^^^^^
    214 |                   <FormItem>
    215 |                     <FormLabel>Category</FormLabel>
    216 |                     <FormControl>

 ERROR(TypeScript)  Type 'string' does not satisfy the constraint '"date" | "description" | "category" | "severity" | "mood" | "moodIntensity"'.
 FILE  /home/runner/WomensWellnessApp/client/src/components/SymptomTracker.tsx:236:85

    234 |                 control={form.control}
    235 |                 name="severity"
  > 236 |                 render={({ field }: { field: ControllerRenderProps<SymptomFormData, string> }) => (
        |                                                                                     ^^^^^^
    237 |                   <FormItem>
    238 |                     <FormLabel>Severity (1-10)</FormLabel>
    239 |                     <FormControl>

 ERROR(TypeScript)  Type 'string' does not satisfy the constraint '"date" | "description" | "category" | "severity" | "mood" | "moodIntensity"'.
 FILE  /home/runner/WomensWellnessApp/client/src/components/SymptomTracker.tsx:259:85

    257 |                 control={form.control}
    258 |                 name="date"
  > 259 |                 render={({ field }: { field: ControllerRenderProps<SymptomFormData, string> }) => (
        |                                                                                     ^^^^^^
    260 |                   <FormItem>
    261 |                     <FormLabel>Date</FormLabel>
    262 |                     <FormControl>

 ERROR(TypeScript)  Type '(date: Date) => void' is not assignable to type '((date: Date | null, event?: KeyboardEvent<HTMLElement> | MouseEvent<HTMLElement, MouseEvent> | undefined) => void) | ((date: [...], event?: KeyboardEvent<...> | ... 1 more ... | undefined) => void) | ((date: Date[] | null, event?: KeyboardEvent<...> | ... 1 more ... | undefined) => void) | undefined'.
  Type '(date: Date) => void' is not assignable to type '(date: Date | null, event?: KeyboardEvent<HTMLElement> | MouseEvent<HTMLElement, MouseEvent> | undefined) => void'.
    Types of parameters 'date' and 'date' are incompatible.
      Type 'Date | null' is not assignable to type 'Date'.
        Type 'null' is not assignable to type 'Date'.
 FILE  /home/runner/WomensWellnessApp/client/src/components/SymptomTracker.tsx:265:25

    263 |                       <DatePicker
    264 |                         selected={new Date(field.value)}
  > 265 |                         onChange={(date: Date) => field.onChange(date.toISOString())}
        |                         ^^^^^^^^
    266 |                         dateFormat="yyyy-MM-dd"
    267 |                       />
    268 |                     </FormControl>

 ERROR(TypeScript)  Type 'string' does not satisfy the constraint '"date" | "description" | "category" | "severity" | "mood" | "moodIntensity"'.
 FILE  /home/runner/WomensWellnessApp/client/src/components/SymptomTracker.tsx:277:85

    275 |                 control={form.control}
    276 |                 name="mood"
  > 277 |                 render={({ field }: { field: ControllerRenderProps<SymptomFormData, string> }) => (
        |                                                                                     ^^^^^^
    278 |                   <FormItem>
    279 |                     <FormLabel>Mood</FormLabel>
    280 |                     <FormControl>

 ERROR(TypeScript)  Type 'string' does not satisfy the constraint '"date" | "description" | "category" | "severity" | "mood" | "moodIntensity"'.
 FILE  /home/runner/WomensWellnessApp/client/src/components/SymptomTracker.tsx:300:85

    298 |                 control={form.control}
    299 |                 name="moodIntensity"
  > 300 |                 render={({ field }: { field: ControllerRenderProps<SymptomFormData, string> }) => (
        |                                                                                     ^^^^^^
    301 |                   <FormItem>
    302 |                     <FormLabel>Mood Intensity (1-10)</FormLabel>
    303 |                     <FormControl>

 ERROR(TypeScript)  Type 'string' does not satisfy the constraint '"date" | "description" | "category" | "severity" | "mood" | "moodIntensity"'.
 FILE  /home/runner/WomensWellnessApp/client/src/components/SymptomTracker.tsx:323:85

    321 |                 control={form.control}
    322 |                 name="description"
  > 323 |                 render={({ field }: { field: ControllerRenderProps<SymptomFormData, string> }) => (
        |                                                                                     ^^^^^^
    324 |                   <FormItem>
    325 |                     <FormLabel>Description</FormLabel>
    326 |                     <FormControl>

 ERROR(TypeScript)  'props' is declared but its value is never read.
 FILE  /home/runner/WomensWellnessApp/client/src/components/ui/calendar.tsx:55:20

    53 |       }}
    54 |       components={{
  > 55 |         IconLeft: ({ ...props }) => <ChevronLeft className="h-4 w-4" />,
       |                    ^^^^^^^^^^^^
    56 |         IconRight: ({ ...props }) => <ChevronRight className="h-4 w-4" />,
    57 |       }}
    58 |       {...props}

 ERROR(TypeScript)  'props' is declared but its value is never read.
 FILE  /home/runner/WomensWellnessApp/client/src/components/ui/calendar.tsx:56:21

    54 |       components={{
    55 |         IconLeft: ({ ...props }) => <ChevronLeft className="h-4 w-4" />,
  > 56 |         IconRight: ({ ...props }) => <ChevronRight className="h-4 w-4" />,
       |                     ^^^^^^^^^^^^
    57 |       }}
    58 |       {...props}
    59 |     />

 ERROR(TypeScript)  'AuthPage' is declared but its value is never read.
 FILE  /home/runner/WomensWellnessApp/client/src/main.tsx:9:1

     7 | import { Toaster } from "@/components/ui/toaster";
     8 | import HomePage from "./pages/HomePage";
  >  9 | import AuthPage from "./pages/AuthPage";
       | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    10 | import { Loader2 } from "lucide-react";
    11 | import { useUser } from "./hooks/use-user";
    12 | import Layout from "./components/Layout";

 ERROR(TypeScript)  'Loader2' is declared but its value is never read.
 FILE  /home/runner/WomensWellnessApp/client/src/main.tsx:10:1

     8 | import HomePage from "./pages/HomePage";
     9 | import AuthPage from "./pages/AuthPage";
  > 10 | import { Loader2 } from "lucide-react";
       | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    11 | import { useUser } from "./hooks/use-user";
    12 | import Layout from "./components/Layout";
    13 |

 ERROR(TypeScript)  'useUser' is declared but its value is never read.
 FILE  /home/runner/WomensWellnessApp/client/src/main.tsx:11:1

     9 | import AuthPage from "./pages/AuthPage";
    10 | import { Loader2 } from "lucide-react";
  > 11 | import { useUser } from "./hooks/use-user";
       | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    12 | import Layout from "./components/Layout";
    13 |
    14 | function Router() {

 ERROR(TypeScript)  'InsertUser' is declared but its value is never read.
 FILE  /home/runner/WomensWellnessApp/client/src/pages/AuthPage.tsx:10:33

     8 | import { useToast } from "@/hooks/use-toast";
     9 | import { useUser } from "../hooks/use-user";
  > 10 | import { insertUserSchema, type InsertUser } from "@db/schema";
       |                                 ^^^^^^^^^^
    11 |
    12 | interface AuthFormValues {
    13 |   username: string;

 ERROR(TypeScript)  'showPasswordReset' is declared but its value is never read.
 FILE  /home/runner/WomensWellnessApp/client/src/pages/AuthPage.tsx:26:10

    24 |   const { toast } = useToast();
    25 |
  > 26 |   const [showPasswordReset, setShowPasswordReset] = useState(false);
       |          ^^^^^^^^^^^^^^^^^
    27 |   const form = useForm<AuthFormValues>({
    28 |     resolver: zodResolver(insertUserSchema),
    29 |     defaultValues: {

 ERROR(TypeScript)  'DailyChecklist' is declared but its value is never read.
 FILE  /home/runner/WomensWellnessApp/client/src/pages/HomePage.tsx:3:1

    1 | import { useState } from "react";
    2 | import { Home, Activity, LineChart, Menu } from "lucide-react";
  > 3 | import { DailyChecklist } from "../components/DailyChecklist";
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    4 | import SymptomTracker from "../components/SymptomTracker";
    5 | import SupplementTracker from "../components/SupplementTracker";
    6 | import HealthMetrics from "../components/HealthMetrics";

 ERROR(TypeScript)  'User' is declared but its value is never read.
 FILE  /home/runner/WomensWellnessApp/server/auth.ts:8:22

     6 | import { scrypt, randomBytes, timingSafeEqual } from "crypto";
     7 | import { promisify } from "util";
  >  8 | import { users, type User } from "@db/schema";
       |                      ^^^^
     9 | import { db } from "../db";
    10 | import { eq } from "drizzle-orm";
    11 |

 ERROR(TypeScript)  'req' is declared but its value is never read.
 FILE  /home/runner/WomensWellnessApp/server/auth.ts:109:15

    107 |       passwordField: 'password',
    108 |       passReqToCallback: true
  > 109 |     }, async (req, email, password, done) => {
        |               ^^^
    110 |       const timeout = setTimeout(() => {
    111 |         done(new Error('Authentication timeout'), false);
    112 |       }, 30000); // 30 second timeout

 ERROR(TypeScript)  'req' is declared but its value is never read.
 FILE  /home/runner/WomensWellnessApp/server/routes.ts:118:59

    116 |   });
    117 |
  > 118 |   app.post("/api/login", passport.authenticate("local"), (req: Request, res: Response) => {
        |                                                           ^^^
    119 |     res.json({ message: "Login successful" });
    120 |   });
    121 |

 ERROR(TypeScript)  'validatedData' is declared but its value is never read.
 FILE  /home/runner/WomensWellnessApp/server/routes.ts:337:13

    335 |
    336 |       // Validate the transformed data
  > 337 |       const validatedData = insertSupplementSchema.parse(result.data);
        |             ^^^^^^^^^^^^^
    338 |
    339 |       // Start transaction
    340 |       const supplement = await db.transaction(async (tx) => {

 ERROR(TypeScript)  'req' is declared but its value is never read.
 FILE  /home/runner/WomensWellnessApp/server/routes.ts:488:24

    486 |
    487 |   // Error handling middleware
  > 488 |   app.use((err: Error, req: Request, res: Response, next: NextFunction) => {
        |                        ^^^
    489 |     console.error('Server error:', err);
    490 |     
    491 |     if (err.name === 'TimeoutError') {

 ERROR(TypeScript)  'next' is declared but its value is never read.
 FILE  /home/runner/WomensWellnessApp/server/routes.ts:488:53

    486 |
    487 |   // Error handling middleware
  > 488 |   app.use((err: Error, req: Request, res: Response, next: NextFunction) => {
        |                                                     ^^^^
    489 |     console.error('Server error:', err);
    490 |     
    491 |     if (err.name === 'TimeoutError') {

[TypeScript] Found 26 errors. Watching for file changes.
12:18:06 PM [express] GET /api/user 304 in 22ms :: {"id":1,"username":"testuser","email":"test@exampl…
Auth check - isAuthenticated: true
User authenticated: { userId: 1 }
Fetching supplements for user: 1
Found 0 supplements for user 1
No supplements found for user: 1